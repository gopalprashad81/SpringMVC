plugins {
    id 'java'
}

allprojects {
    group 'com.apress.cems'
    version '1.0-SNAPSHOT'
}

subprojects {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://repo.spring.io/snapshot/" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

sourceCompatibility = 12

ext {
    springVersion = '5.2.0.M1'
    springBootVersion = '2.2.0.M2'
    springJpaVersion = '2.2.0.M1'

    //testing
    junit5Version = '5.5.0-M1'
    junit5PlatformVersion = '1.5.0-M1'
    mockitoAllVersion = '2.0.2-beta'
    mockitoVersion = '2.26.0'
    easymockVersion = '4.0.2'
    junitVersion = '4.13-beta-2'
    jmockVersion = '2.10.0-RC3'

    //aop libs
    aspectjVersion = '1.9.3'

    //logging
    slf4jVersion = '1.8.0-beta4'
    logbackVersion = '1.3.0-alpha4'

    // db
    hibernateVersion = '5.4.0.Final'
    ojdbcVersion = '12.1.0.2'

    //in memory test database
    h2Version = '1.4.198'

    lang3Version = '3.8.1'

    //we group libraries by their purpose so we can import them easier in the modules
    boot = [
            springBootPlugin: "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion",
            starterWeb      : "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
            starterAop      : "org.springframework.boot:spring-boot-starter-aop:$springBootVersion",
            starterSecurity : "org.springframework.boot:spring-boot-starter-security:$springBootVersion",
            starterJpa      : "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion",
            starterTest     : "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
            actuator        : "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion",
            devtools        : "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    ]

    spring = [
            beans         : "org.springframework:spring-beans:$springVersion",
            contextSupport: "org.springframework:spring-context-support:$springVersion",
            jdbc          : "org.springframework:spring-jdbc:$springVersion",
            test          : "org.springframework:spring-test:$springVersion",
            webmvc        : "org.springframework:spring-webmvc:$springVersion"
    ]

    testing = [
            junit         : "junit:junit:$junitVersion",
            api           : "org.junit.jupiter:junit-jupiter-api:$junit5Version",
            engine        : "org.junit.jupiter:junit-jupiter-engine:$junit5Version",
            vintageEngine : "org.junit.vintage:junit-vintage-engine:$junit5Version",
            easymock      : "org.easymock:easymock:$easymockVersion",
            jmockju4      : "org.jmock:jmock-junit4:$jmockVersion",
            jmockju5      : "org.jmock:jmock-junit5:$jmockVersion",
            mockitoAll    : "org.mockito:mockito-all:$mockitoAllVersion",
            mockito       : "org.mockito:mockito-junit-jupiter:$mockitoVersion",
            platformRunner: "org.junit.platform:junit-platform-runner:$junit5PlatformVersion"
    ]

    misc = [
            h2              : "com.h2database:h2:$h2Version",
            jsr250          : "javax.annotation:jsr250-api:1.0",
            inject          : "javax.inject:javax.inject:1",
            javaxValidation : "javax.validation:validation-api:2.0.1.Final",
            javaxPersistence: "org.eclipse.persistence:javax.persistence:2.2.1",
            lang3           : "org.apache.commons:commons-lang3:$lang3Version",
            ojdbc           : "com.oracle:ojdbc7:$ojdbcVersion",
            slf4j           : "org.slf4j:slf4j-api:$slf4jVersion",
            logback         : "ch.qos.logback:logback-classic:$logbackVersion",
            aspectjweaver     : "org.aspectj:aspectjweaver:$aspectjVersion"
    ]

    hibernate = [
            validator: "org.hibernate:hibernate-validator:6.0.13.Final",
            ehcache  : "org.hibernate:hibernate-ehcache:$hibernateVersion",
            em       : "org.hibernate:hibernate-entitymanager:$hibernateVersion",
            core     : "org.hibernate:hibernate-core:$hibernateVersion"
    ]
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://repo.spring.io/snapshot/" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
}

task allDeps {
    doLast {
        description 'Task used to display dependencies for all modules in the project'
        subprojects.each { p ->
            println()
            println " $p.name ".center(60, '*')
            println()
            p.configurations.all.findAll { !it.allDependencies.empty }.each { c ->
                println " ${c.name} ".center(60, '-')
                c.allDependencies.each { dep ->
                    println "$dep.group:$dep.name:$dep.version"
                }
                println "-" * 60
            }
        }
    }
}